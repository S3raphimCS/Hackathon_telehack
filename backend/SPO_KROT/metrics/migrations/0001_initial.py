# Generated by Django 4.2.7 on 2023-11-11 08:43

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Measurements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voice_service_non_accessibility', models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Доля неуспешных попыток установления голосового соединения')),
                ('voice_service_cut_off', models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Доля обрывов голосовых соединений')),
                ('speech_quality_on_call', models.DecimalField(decimal_places=15, max_digits=30, verbose_name='Средняя разборчивость речи на соединение')),
                ('negative_mos_samples_ratio', models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Доля голосовых соединений с низкой разборчивостью речи')),
                ('undelivered_messages', models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Доля недоставленных SMS сообщений')),
                ('avg_sms_delivery_time', models.DecimalField(decimal_places=15, max_digits=30, verbose_name='Среднее время доставки SMS сообщений')),
                ('http_failure_session', models.DecimalField(decimal_places=15, max_digits=30, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Доля неуспешных сессий по протоколу HTTP')),
                ('http_ul_mean_userdata_rate', models.DecimalField(decimal_places=15, max_digits=30, verbose_name='Среднее значение скорости передачи данных от абонента')),
                ('http_dl_mean_userdata_rate', models.DecimalField(decimal_places=15, max_digits=30, verbose_name='Среднее значение скорости передачи данных к абоненту')),
                ('http_session_time', models.DecimalField(decimal_places=15, max_digits=30, verbose_name='Продолжительность успешной сессии')),
                ('number_of_test_voice_connections', models.IntegerField(verbose_name='Общее количество тестовых голосовых соединений ')),
                ('number_of_voice_sequences', models.IntegerField(verbose_name='Общее количество голосовых последовательностей в оцениваемых соединениях')),
                ('voice_connections_with_low_intelligibility', models.IntegerField(verbose_name='Количество голосовых соединений с низкой разборчивостью')),
                ('number_of_sms_messages', models.IntegerField(verbose_name='Общее количество отправленных SMS - сообщений')),
                ('number_of_connections_attempts_http', models.IntegerField(verbose_name='Общее количество попыток соединений с сервером передачи данных HTTP')),
                ('number_of_test_sessions_http', models.IntegerField(verbose_name='Общее количество тестовых сессий по протоколу HTTP')),
            ],
            options={
                'verbose_name': 'Измерение',
                'verbose_name_plural': 'Измерения',
            },
        ),
        migrations.CreateModel(
            name='Operator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Название оператора')),
            ],
            options={
                'verbose_name': 'Оператор',
                'verbose_name_plural': 'Операторы',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название отчета')),
                ('region', models.CharField(blank=True, max_length=100, null=True, verbose_name='Регион')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Дата начала измерений')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата конца измерений')),
                ('published', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Отчет',
                'verbose_name_plural': 'Отчеты',
            },
        ),
    ]
